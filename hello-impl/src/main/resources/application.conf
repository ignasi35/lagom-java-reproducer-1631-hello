play.modules.enabled += com.example.hello.impl.HelloModule

# Keeping this disabled should still produce "before-cluster-shutdown" as the "run-cs-from-phase"
# since that's the reasonable default for Lagom.
# Try different values to see them overwrite the default.
#play.akka.run-cs-from-phase = "before-cluster-shutdown"
play.akka.run-cs-from-phase = "service-unbind"
//play.akka.run-cs-from-phase = "service-stop"


play.http.secret.key = "aksdjfhalskjfhasljkdfhalskjfhlj234712347qwert9a87dv78v69z7c69v7cxv69z7xcvzduvz"


lagom.cluster {
  ## Used to test with single-node clusters. Once the process is running, use `jconsole` to connet via JMX
  ## and send a manual downing using the "akka" MBean-Operation "down(akka.tcp://application@192.168.1.133:2552)"
  ## (your Address may vary, your service logs)
  join-self = on
  ## JVM exit is responsibility of Play, not Akka, but when downing the responsiblity shifts and
  ## we must enable tell Akka to take over. The reason is that the trigger is no longer a SIGTERM but a Downing
  ## event handled by Akka directly. The implication is we have to manually register a shutdown task in JoinClusterImpl
  ## and (manually) decide if we want to trogger the system.exit which, in turn, will invoke Play's JVM shutdown hook.
  ## The end result is that all resources will be released but not in the nicest of the orders but since we're
  ## Downed and no longer have access to the cluster it's not a big deal.
  exit-jvm-when-system-terminated = on
}